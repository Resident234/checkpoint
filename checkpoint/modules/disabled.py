from pathlib import Path

from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.chrome.webdriver import WebDriver
from selenium.webdriver.common.by import By

from checkpoint import globals as gb
from checkpoint import config
from checkpoint.helpers.pages import check_page, load_allowed_pages, save_allowed_pages, get_page_title
from checkpoint.helpers.email import *
from checkpoint.helpers.popups import check_popup
from checkpoint.helpers.utils import sleep
from checkpoint.knowledge import fs, pauses
from checkpoint.knowledge.pages import urls
from checkpoint.modules import login
from checkpoint.objects.archive import ArchiveManager
from checkpoint.objects.media import MediaManager
from checkpoint.objects.stats import PhotoStatsManager
from checkpoint.objects.cleanup import CleanupManager

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
archive_manager = None
media_manager = None
stats_manager = None
cleanup_manager = None




def handle_download_ready(driver: WebDriver, download_folder: Path) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
    
    Args:
        driver: WebDriver instance
        download_folder: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    """
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Å —Ç–µ–∫—Å—Ç–æ–º "–°–∫–∞—á–∞—Ç—å * —Ñ–∞–π–ª–æ–≤ –∏–∑ *"
    try:
        download_buttons = driver.find_elements(
            By.XPATH, 
            "//*[contains(text(), '–°–∫–∞—á–∞—Ç—å') and contains(text(), '—Ñ–∞–π–ª–æ–≤ –∏–∑')]"
        )
        
        if download_buttons:
            gb.rc.print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(download_buttons)} –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è", style="yellow")
            
            for i, button in enumerate(download_buttons, 1):
                try:
                    button_text = button.text
                    gb.rc.print(f"üì• –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É {i}: {button_text}", style="cyan")
                    
                    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
                    driver.execute_cdp_cmd('Page.setDownloadBehavior', {
                        'behavior': 'allow',
                        'downloadPath': str(download_folder)
                    })
                    
                    # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –¥–æ –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∏–∫–∞–µ–º
                    driver.execute_script("arguments[0].scrollIntoView();", button)
                    sleep(pauses.download['button_click'], "–ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –∫–Ω–æ–ø–∫–µ")
                    button.click()
                    sleep(pauses.download['button_click'], "–ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ")
                    
                    # –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    sleep(pauses.download['download_start'], "–û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
                    gb.rc.print(f"‚úÖ –ö–Ω–æ–ø–∫–∞ {i} –Ω–∞–∂–∞—Ç–∞, —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ", style="green")
                    
                except Exception as e:
                    gb.rc.print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ {i}: {e}", style="red")
                    continue

            gb.rc.print(f"üìä –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: {len(download_buttons)} —Ñ–∞–π–ª–æ–≤", style="blue")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ email
            send_download_completion_notification(config.NOTIFY_EMAIL, len(download_buttons))

            gb.rc.print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏–π...", style="yellow")
            sleep(pauses.download['post_download'], "–ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–π")
            gb.rc.print("‚è∞ –ü–∞—É–∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É", style="green")

    except NoSuchElementException:
        pass


async def run(driver: WebDriver = None, download_path: str = None, root_folder: str = None):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥—É–ª—è
    gb.current_module_name = "disabled"
    
    gb.rc.print("\nüó∫Ô∏è Disabled account page", style="green4")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –º–æ–¥—É–ª—è
    send_module_start_notification(config.NOTIFY_EMAIL, "Disabled Account Page")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if download_path is None:
        download_path = fs.path['download_path']

    if root_folder is None:
        root_folder = fs.path['root_folder']

    download_folder = Path(download_path)
    root_folder = Path(root_folder)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞
    if not download_folder.exists():
        gb.rc.print(f"‚ùå –ü–∞–ø–∫–∞ {download_folder} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!", style="red")
        return False
    
    gb.rc.print(f"üìÅ –§–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤: {download_folder}", style="blue")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞—Ä—Ö–∏–≤–æ–≤
    global archive_manager, media_manager, stats_manager, cleanup_manager
    archive_manager = ArchiveManager(download_folder)
    archive_manager.start_monitor()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –º–µ–¥–∏–∞
    media_path = download_folder / fs.path['facebook_media_subpath']
    gb.rc.print(f"üìÅ –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –≤: {root_folder}", style="blue")
    media_manager = MediaManager(media_path, root_folder)
    media_manager.start_monitor()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    # –†–∞–∑–º–µ—â–∞–µ–º –ø–∞–ø–∫—É stats_logs –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ (—Ä—è–¥–æ–º —Å –ø–∞–ø–∫–æ–π logs)
    current_file = Path(__file__)
    project_root = current_file.parent.parent.parent  # checkpoint/modules/disabled.py -> CheckPoint/
    stats_logs_path = project_root / fs.path['stats_logs_dir']
    stats_logs_path.mkdir(parents=True, exist_ok=True)
    gb.rc.print(f"üìä –õ–æ–≥–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤: {stats_logs_path}", style="blue")
    stats_manager = PhotoStatsManager(root_folder, stats_logs_path, send_email=True)
    stats_manager.start_monitor()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ—á–∏—Å—Ç–∫–∏
    gb.rc.print(f"üßπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤: {download_folder}", style="blue")
    cleanup_manager = CleanupManager(download_folder)
    cleanup_manager.start_monitor()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º allowed_pages –∏–∑ JSON —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    allowed_pages = load_allowed_pages()

    try:
        while True:

            if 'disabled_account' in allowed_pages and check_page(driver, 'disabled_account'):
                get_page_title(driver)
                button = driver.find_element(By.XPATH, "//*[text()='–°–∫–∞—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é']")
                if button:
                    button.click()

            if 'download_account' in allowed_pages and check_page(driver, 'download_account'):
                get_page_title(driver)
                button = driver.find_element(By.XPATH, "//*[text()='–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª']")
                if button:
                    button.click()
                    allowed_pages.append('download_ready')
                    save_allowed_pages(allowed_pages)

            if 'creation_backup_is_processing' in allowed_pages and check_page(driver, 'creation_backup_is_processing'):
                get_page_title(driver)
                sleep(pauses.download['backup_processing'], "–û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—ç–∫–∞–ø–∞")

            if 'login' in allowed_pages and check_page(driver, 'login'):
                get_page_title(driver)
                await login.check_and_login(driver)

            #allowed_pages.remove('download_ready')
            #allowed_pages.append('download_ready')
            if 'download_ready' in allowed_pages and check_page(driver, 'download_ready'):
                get_page_title(driver)
                handle_download_ready(driver, download_folder)
                allowed_pages.remove('download_ready')
                save_allowed_pages(allowed_pages)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å—Ç–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ–∞–Ω—Å–∞
            if check_popup(driver, "session_timeout"):
                gb.rc.print("üè† –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑-–∑–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–µ–∞–Ω—Å–∞", style="cyan")
                driver.get(urls["home"])
                continue

            driver.refresh()
            
    except KeyboardInterrupt:
        gb.rc.print("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...", style="yellow")
    except Exception as e:
        gb.rc.print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ disabled: {e}", style="red")
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ZIP —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        if archive_manager:
            archive_manager.stop_monitor()
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–µ–¥–∏–∞ –ø–∞–ø–æ–∫ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        if media_manager:
            media_manager.stop_monitor()
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        if stats_manager:
            stats_manager.stop_monitor()
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        if cleanup_manager:
            cleanup_manager.stop_monitor()


